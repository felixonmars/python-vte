Upstream: http://bugzilla.gnome.org/show_bug.cgi?id=320128
Description: Keep file descriptors open on deepinvte_fork_pty().

Index: deepinvte-0.26.2/src/pty.c
===================================================================
--- deepinvte-0.26.2.orig/src/pty.c	2010-10-19 00:58:58.000000000 +1100
+++ deepinvte-0.26.2/src/pty.c	2010-11-24 17:30:31.825693001 +1100
@@ -192,6 +192,7 @@
 		const char *name;
 		int fd;
 	} tty;
+	int keep_fd;
 } DeepinvtePtyChildSetupData;
 
 /**
@@ -332,6 +333,20 @@
 		close(fd);
 	}
 
+        if (data->keep_fd > 0) {
+                int i;
+                /* Close most descriptors. */
+                for (i = 0; i < sysconf(_SC_OPEN_MAX); i++) {
+                        if (i != data->keep_fd &&
+                            i != fd && 
+                            i != STDOUT_FILENO && 
+                            i != STDIN_FILENO && 
+                            i != STDERR_FILENO) {
+                                close(i);
+                         }
+                }
+        }
+
 	/* Reset our signals -- our parent may have done any number of
 	 * weird things to them. */
 	_deepinvte_pty_reset_signal_handlers();
@@ -440,6 +455,23 @@
 	return (gchar **) g_ptr_array_free (array, FALSE);
 }
 
+static int
+_deepinvte_pty_keep_fd(char **env_add)
+{
+        int i;
+        if (env_add == NULL)
+                return -1;
+
+        const gchar *needle = "DEEPINVTE_PTY_KEEP_FD=";
+        for (i = 0; env_add[i] != NULL; i++) {
+                gchar *s = strstr(env_add[i], needle);
+                if (s != NULL)
+                        return atoi(&s[strlen(needle)]);
+        }
+
+        return -1;
+}
+
 /*
  * __deepinvte_pty_get_pty_flags:
  * @lastlog: %TRUE if the session should be logged to the lastlog
@@ -523,6 +555,10 @@
         /* add the given environment to the childs */
         envp2 = __deepinvte_pty_merge_environ (envv, pty->priv->term);
 
+        pty->priv->child_setup_data.keep_fd = _deepinvte_pty_keep_fd(envp2);
+        if (pty->priv->child_setup_data.keep_fd > 0)
+                spawn_flags |= G_SPAWN_LEAVE_DESCRIPTORS_OPEN;
+
         _DEEPINVTE_DEBUG_IF (DEEPINVTE_DEBUG_MISC) {
                 g_printerr ("Spawing command:\n");
                 for (i = 0; argv[i] != NULL; i++) {
